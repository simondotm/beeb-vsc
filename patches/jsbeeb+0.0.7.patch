diff --git a/node_modules/jsbeeb/.DS_Store b/node_modules/jsbeeb/.DS_Store
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/jsbeeb/utils.js b/node_modules/jsbeeb/utils.js
index 2bdc511..01b7b02 100644
--- a/node_modules/jsbeeb/utils.js
+++ b/node_modules/jsbeeb/utils.js
@@ -836,31 +836,44 @@ function loadDataHttp(url) {
     });
 }
 
-async function loadDataNode(url) {
-    if (typeof readbuffer !== "undefined") {
-        // d8 shell
-        /*global readbuffer*/
-        return new Uint8Array(readbuffer(url));
-    } else if (typeof read !== "undefined") {
-        // SpiderMonkey shell
-        /*global read*/
-        return read(url, "binary");
-    } else {
-        // Node
-        const fs = await import("fs");
-        if (url[0] === "/") url = "." + url;
-        return fs.readFileSync(url);
-    }
+// SM: disable loadDataNode() so we dont have to patch import "fs"
+// async function loadDataNode(url) {
+//     if (typeof readbuffer !== "undefined") {
+//         // d8 shell
+//         /*global readbuffer*/
+//         return new Uint8Array(readbuffer(url));
+//     } else if (typeof read !== "undefined") {
+//         // SpiderMonkey shell
+//         /*global read*/
+//         return read(url, "binary");
+//     } else {
+//         // Node
+//         const fs = await import("fs");
+//         if (url[0] === "/") url = "." + url;
+//         return fs.readFileSync(url);
+//     }
+// }
+
+// export function loadData(url) {
+//     if (runningInNode) {
+//         return loadDataNode(url);
+//     } else {
+//         return loadDataHttp(url);
+//     }
+// }
+
+
+let urlMap = [];
+export function setUrlMap(map) {
+    urlMap = map;
 }
 
 export function loadData(url) {
-    if (runningInNode) {
-        return loadDataNode(url);
-    } else {
-        return loadDataHttp(url);
-    }
+    return loadDataHttp(urlMap[url] ?? url);
 }
 
+
+
 export function readInt32(data, offset) {
     return (data[offset + 3] << 24) | (data[offset + 2] << 16) | (data[offset + 1] << 8) | data[offset + 0];
 }
